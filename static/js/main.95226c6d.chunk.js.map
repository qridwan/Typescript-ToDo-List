{"version":3,"sources":["components/Form.tsx","components/List.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Form","form","setForm","useState","name","time","comment","input","setInput","handleChange","e","target","value","className","type","onChange","onClick","preventDefault","parseInt","handleClick","List","map","i","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QA0FeA,EAlFiB,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACvC,EAA0BC,mBAAS,CACjCC,KAAM,GACNC,KAAM,GACNC,QAAS,KAHX,mBAAOC,EAAP,KAAcC,EAAd,KAMMC,EAAe,SACnBC,GAEAF,EAAS,2BACJD,GADG,kBAELG,EAAEC,OAAOP,KAAOM,EAAEC,OAAOC,UAwB9B,OACE,8BACE,uBAAMC,UAAU,GAAhB,UACE,sBAAKA,UAAU,gBAAf,UACE,gCACE,4CACA,uBACEA,UAAU,WACVC,KAAK,OACLV,KAAK,OACLQ,MAAOL,EAAMH,KACbW,SAAU,SAACL,GAAD,OAAOD,EAAaC,SAGlC,gCACE,4CACA,uBACEG,UAAU,kBACVC,KAAK,SACLV,KAAK,OACLQ,MAAOL,EAAMF,KACbU,SAAU,SAACL,GAAD,OAAOD,EAAaC,YAIpC,gCACE,oDACA,0BACEG,UAAU,WACVT,KAAK,UACLQ,MAAOL,EAAMD,QACbS,SAAU,SAACL,GAAD,OAAOD,EAAaC,SAGlC,wBACEG,UAAU,SACVC,KAAK,SACLE,QAAS,SAACN,GAAD,OAzDG,SAACA,GACnBA,EAAEO,iBACGV,EAAMH,MAASG,EAAMF,OAG1BH,EAAQ,GAAD,mBACFD,GADE,CAEL,CACEG,KAAMG,EAAMH,KACZC,KAAMa,SAASX,EAAMF,MACrBC,QAASC,EAAMD,YAGnBE,EAAS,CACPJ,KAAM,GACNC,KAAM,GACNC,QAAS,MAyCWa,CAAYT,IAH9B,0BCjDOU,EA1BiB,SAAC,GAAc,IAAZnB,EAAW,EAAXA,KAYjC,OACE,qBAAKY,UAAU,WAAf,SACE,kCACE,+BACE,sCACA,uCAAS,uBAAT,gBACA,6CAhBCZ,EAAKoB,KAAI,SAACC,GACf,OACE,+BACE,6BAAKA,EAAElB,OACP,6BAAKkB,EAAEjB,OACP,6BAAKiB,EAAEhB,sBCyBFiB,MAvBf,WACE,MAAwBpB,mBAA0B,CAChD,CACEC,KAAM,aACNC,KAAM,EACNC,QAAS,gBAEX,CACEF,KAAM,mBACNC,KAAM,GACNC,QAAS,mBATb,mBAAOL,EAAP,KAAaC,EAAb,KAYA,OACE,qBAAKW,UAAU,MAAf,SACE,iCACA,cAAC,EAAD,CAAMZ,KAAMA,IACZ,cAAC,EAAD,CAAMA,KAAMA,EAAMC,QAAUA,UCfnBsB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.95226c6d.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { MyState as Props } from \"../App\";\r\n\r\ninterface MyState {\r\n  form: Props[\"form\"];\r\n  setForm: React.Dispatch<React.SetStateAction<Props[\"form\"]>>;\r\n}\r\n\r\nconst Form: React.FC<MyState> = ({ form, setForm }) => {\r\n  const [input, setInput] = useState({\r\n    name: \"\",\r\n    time: \"\",\r\n    comment: \"\",\r\n  });\r\n\r\n  const handleChange = (\r\n    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ): void => {\r\n    setInput({\r\n      ...input,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleClick = (e: React.MouseEvent<HTMLButtonElement>): void => {\r\n    e.preventDefault();\r\n    if (!input.name || !input.time) {\r\n      return;\r\n    }\r\n    setForm([\r\n      ...form,\r\n      {\r\n        name: input.name,\r\n        time: parseInt(input.time),\r\n        comment: input.comment,\r\n      },\r\n    ]);\r\n    setInput({\r\n      name: \"\",\r\n      time: \"\",\r\n      comment: \"\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form className=\"\">\r\n        <div className=\"first formDiv\">\r\n          <div>\r\n            <h3>Add A task</h3>\r\n            <input\r\n              className=\"inputBox\"\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={input.name}\r\n              onChange={(e) => handleChange(e)}\r\n            />\r\n          </div>\r\n          <div>\r\n            <h3>Add a time</h3>\r\n            <input\r\n              className=\"inputBox rating\"\r\n              type=\"number\"\r\n              name=\"time\"\r\n              value={input.time}\r\n              onChange={(e) => handleChange(e)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <h3>Enter your comment</h3>\r\n          <textarea\r\n            className=\"inputBox\"\r\n            name=\"comment\"\r\n            value={input.comment}\r\n            onChange={(e) => handleChange(e)}\r\n          ></textarea>\r\n        </div>\r\n        <button\r\n          className=\"button\"\r\n          type=\"submit\"\r\n          onClick={(e) => handleClick(e)}\r\n        >\r\n          Submit\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport { MyState } from \"../App\";\r\n\r\nconst List: React.FC<MyState> = ({ form }) => {\r\n  const mapList = (): JSX.Element[] => {\r\n    return form.map((i) => {\r\n      return (\r\n        <tr>\r\n          <td>{i.name}</td>\r\n          <td>{i.time}</td>\r\n          <td>{i.comment}</td>\r\n        </tr>\r\n      );\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"tableDiv\">\r\n      <table>\r\n        <tr>\r\n          <th>Todo</th>\r\n          <th>Time <br/> 24 hours </th>\r\n          <th>Comments</th>\r\n        </tr>\r\n        {mapList()}\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Form from \"./components/Form\";\nimport List from \"./components/List\";\n\nexport interface MyState {\n  form: {\n    name: string;\n    time: number;\n    comment?: string; // review?:string denotes the value of review could either be a string or undefined\n  }[]; //[] denotes MyState state variables could be An array\n}\nfunction App() {\n  const [form, setForm] = useState<MyState[\"form\"]>([\n    {\n      name: \"Break-fast\",\n      time: 9,\n      comment: \"Healthy Food\",\n    },\n    {\n      name: \"Learn Typescript\",\n      time: 10,\n      comment: \"10 pm - 12 pm\",\n    },\n  ]);\n  return (\n    <div className=\"App\">\n      <main>\n      <List form={form} />\n      <Form form={form} setForm ={setForm} />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}